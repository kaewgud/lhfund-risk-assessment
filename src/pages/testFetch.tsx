import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";

import { api } from "~/utils/api";

export default function Home() {

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Test Fetch Kub
          </h1>
          <div className="flex flex-col items-center gap-2">
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: questions } = api.assessment.getAllQuestion.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  const { data: choices } = api.assessment.getAllChoice.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
      </p>
      {questions && (
        <div className="flex flex-col items-center gap-2">
          <h2 className="text-2xl text-white">Questions</h2>
          <div className="flex flex-col gap-2">
            {questions.map((question) => (
              <div
                key={question.id}
                className="flex flex-col gap-2 bg-white/10 p-4 rounded-xl"
              >
                <h3 className="text-lg font-bold text-white">{question.text}</h3>
                {choices?.map((choice) => (
                  choice.questionId === question.id && (
                    <div key={choice.id} className="flex items-center gap-2">
                      <input
                        type="radio"
                        name={`question-${question.id}`}
                        id={`choice-${choice.id}`}
                      />
                      <label htmlFor={`choice-${choice.id}`} className="text-white">
                        {choice.text}
                      </label>
                    </div>
                  )
                ))}

              </div>
            ))}
          </div>
        </div>
      )}
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
